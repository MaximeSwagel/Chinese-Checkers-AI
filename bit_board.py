import networkx as nx
from game_board import generate_two_player_chinese_checkers

player1_pieces = 0b000000000000000000000000000000000000000000000000000000000000000000000001111111111
player2_pieces = 0b111111111100000000000000000000000000000000000000000000000000000000000000000000000

all_pieces = 0b111111111100000000000000000000000000000000000000000000000000000000000001111111111

neighbors_masks_list = [
    0b000000000000000000000000000000000000000000000000000000000000000000000000000000110,
    0b000000000000000000000000000000000000000000000000000000000000000000000000000011101,
    0b000000000000000000000000000000000000000000000000000000000000000000000000000110011,
    0b000000000000000000000000000000000000000000000000000000000000000000000000011010010,
    0b000000000000000000000000000000000000000000000000000000000000000000000000110101110,
    0b000000000000000000000000000000000000000000000000000000000000000000000001100010100,
    0b000000000000000000000000000000000000000000000000000000000000000000000110010001000,
    0b000000000000000000000000000000000000000000000000000000000000000000001100101011000,
    0b000000000000000000000000000000000000000000000000000000000000000000011001010110000,
    0b000000000000000000000000000000000000000000000000000000000000000000110000100100000,
    0b000000000000000000000000000000000000000000000000000000000000000011000100001000000,
    0b000000000000000000000000000000000000000000000000000000000000000110001010011000000,
    0b000000000000000000000000000000000000000000000000000000000000001100010100110000000,
    0b000000000000000000000000000000000000000000000000000000000000011000101001100000000,
    0b000000000000000000000000000000000000000000000000000000000000110000010001000000000,
    0b000000000000000000000000000000000000000000000000000000000011000010000010000000000,
    0b000000000000000000000000000000000000000000000000000000000110000101000110000000000,
    0b000000000000000000000000000000000000000000000000000000001100001010001100000000000,
    0b000000000000000000000000000000000000000000000000000000011000010100011000000000000,
    0b000000000000000000000000000000000000000000000000000000110000101000110000000000000,
    0b000000000000000000000000000000000000000000000000000001100000010000100000000000000,
    0b000000000000000000000000000000000000000000000000000110000010000001000000000000000,
    0b000000000000000000000000000000000000000000000000001100000101000011000000000000000,
    0b000000000000000000000000000000000000000000000000011000001010000110000000000000000,
    0b000000000000000000000000000000000000000000000000110000010100001100000000000000000,
    0b000000000000000000000000000000000000000000000001100000101000011000000000000000000,
    0b000000000000000000000000000000000000000000000011000001010000110000000000000000000,
    0b000000000000000000000000000000000000000000000110000000100000100000000000000000000,
    0b000000000000000000000000000000000000000000011000000100000001000000000000000000000,
    0b000000000000000000000000000000000000000000110000001010000011000000000000000000000,
    0b000000000000000000000000000000000000000001100000010100000110000000000000000000000,
    0b000000000000000000000000000000000000000011000000101000001100000000000000000000000,
    0b000000000000000000000000000000000000000110000001010000011000000000000000000000000,
    0b000000000000000000000000000000000000001100000010100000110000000000000000000000000,
    0b000000000000000000000000000000000000011000000101000001100000000000000000000000000,
    0b000000000000000000000000000000000000110000000010000001000000000000000000000000000,
    0b000000000000000000000000000000000001000000010000000010000000000000000000000000000,
    0b000000000000000000000000000000000011000000101000000110000000000000000000000000000,
    0b000000000000000000000000000000000110000001010000001100000000000000000000000000000,
    0b000000000000000000000000000000001100000010100000011000000000000000000000000000000,
    0b000000000000000000000000000000011000000101000000110000000000000000000000000000000,
    0b000000000000000000000000000000110000001010000001100000000000000000000000000000000,
    0b000000000000000000000000000001100000010100000011000000000000000000000000000000000,
    0b000000000000000000000000000011000000101000000110000000000000000000000000000000000,
    0b000000000000000000000000000010000000010000000100000000000000000000000000000000000,
    0b000000000000000000000000000100000010000000011000000000000000000000000000000000000,
    0b000000000000000000000000001100000101000000110000000000000000000000000000000000000,
    0b000000000000000000000000011000001010000001100000000000000000000000000000000000000,
    0b000000000000000000000000110000010100000011000000000000000000000000000000000000000,
    0b000000000000000000000001100000101000000110000000000000000000000000000000000000000,
    0b000000000000000000000011000001010000001100000000000000000000000000000000000000000,
    0b000000000000000000000110000010100000011000000000000000000000000000000000000000000,
    0b000000000000000000000100000001000000110000000000000000000000000000000000000000000,
    0b000000000000000000001000001000000011000000000000000000000000000000000000000000000,
    0b000000000000000000011000010100000110000000000000000000000000000000000000000000000,
    0b000000000000000000110000101000001100000000000000000000000000000000000000000000000,
    0b000000000000000001100001010000011000000000000000000000000000000000000000000000000,
    0b000000000000000011000010100000110000000000000000000000000000000000000000000000000,
    0b000000000000000110000101000001100000000000000000000000000000000000000000000000000,
    0b000000000000000100000010000011000000000000000000000000000000000000000000000000000,
    0b000000000000001000010000001100000000000000000000000000000000000000000000000000000,
    0b000000000000011000101000011000000000000000000000000000000000000000000000000000000,
    0b000000000000110001010000110000000000000000000000000000000000000000000000000000000,
    0b000000000001100010100001100000000000000000000000000000000000000000000000000000000,
    0b000000000011000101000011000000000000000000000000000000000000000000000000000000000,
    0b000000000010000010000110000000000000000000000000000000000000000000000000000000000,
    0b000000000100010000011000000000000000000000000000000000000000000000000000000000000,
    0b000000001100101000110000000000000000000000000000000000000000000000000000000000000,
    0b000000011001010001100000000000000000000000000000000000000000000000000000000000000,
    0b000000110010100011000000000000000000000000000000000000000000000000000000000000000,
    0b000000100001000110000000000000000000000000000000000000000000000000000000000000000,
    0b000001001000011000000000000000000000000000000000000000000000000000000000000000000,
    0b000011010100110000000000000000000000000000000000000000000000000000000000000000000,
    0b000110101001100000000000000000000000000000000000000000000000000000000000000000000,
    0b000100010011000000000000000000000000000000000000000000000000000000000000000000000,
    0b001010001100000000000000000000000000000000000000000000000000000000000000000000000,
    0b011101011000000000000000000000000000000000000000000000000000000000000000000000000,
    0b010010110000000000000000000000000000000000000000000000000000000000000000000000000,
    0b110011000000000000000000000000000000000000000000000000000000000000000000000000000,
    0b101110000000000000000000000000000000000000000000000000000000000000000000000000000,
    0b011000000000000000000000000000000000000000000000000000000000000000000000000000000
]

potential_jumps_list = [
    0b000000000000000000000000000000000000000000000000000000000000000000000000000101000,
    0b000000000000000000000000000000000000000000000000000000000000000000000000101000000,
    0b000000000000000000000000000000000000000000000000000000000000000000000001010000000,
    0b000000000000000000000000000000000000000000000000000000000000000000001010000100001,
    0b000000000000000000000000000000000000000000000000000000000000000000010100000000000,
    0b000000000000000000000000000000000000000000000000000000000000000000101000000001001,
    0b000000000000000000000000000000000000000000000000000000000000000101000000100000010,
    0b000000000000000000000000000000000000000000000000000000000000001010000001000000100,
    0b000000000000000000000000000000000000000000000000000000000000010100000000001000010,
    0b000000000000000000000000000000000000000000000000000000000000101000000000010000100,
    0b000000000000000000000000000000000000000000000000000000000101000000001000000001000,
    0b000000000000000000000000000000000000000000000000000000001010000000010000000010000,
    0b000000000000000000000000000000000000000000000000000000010100000000100010000101000,
    0b000000000000000000000000000000000000000000000000000000101000000000000100000010000,
    0b000000000000000000000000000000000000000000000000000001010000000000001000000100000,
    0b000000000000000000000000000000000000000000000000001010000000000100000000001000000,
    0b000000000000000000000000000000000000000000000000010100000000001000000000010000000,
    0b000000000000000000000000000000000000000000000000101000000000010001000000101000000,
    0b000000000000000000000000000000000000000000000001010000000000100010000001010000000,
    0b000000000000000000000000000000000000000000000010100000000000000100000000100000000,
    0b000000000000000000000000000000000000000000000101000000000000001000000001000000000,
    0b000000000000000000000000000000000000000000101000000000000100000000000010000000000,
    0b000000000000000000000000000000000000000001010000000000001000000000000100000000000,
    0b000000000000000000000000000000000000000010100000000000010001000000001010000000000,
    0b000000000000000000000000000000000000000101000000000000100010000000010100000000000,
    0b000000000000000000000000000000000000001010000000000001000100000000101000000000000,
    0b000000000000000000000000000000000000010100000000000000001000000000010000000000000,
    0b000000000000000000000000000000000000101000000000000000010000000000100000000000000,
    0b000000000000000000000000000000000010000000000000001000000000000001000000000000000,
    0b000000000000000000000000000000000101000000000000010000000000000010000000000000000,
    0b000000000000000000000000000000001010000000000000100010000000000101000000000000000,
    0b000000000000000000000000000000010100000000000001000100000000001010000000000000000,
    0b000000000000000000000000000000101000000000000010001000000000010100000000000000000,
    0b000000000000000000000000000001010000000000000100010000000000101000000000000000000,
    0b000000000000000000000000000010100000000000000000100000000000010000000000000000000,
    0b000000000000000000000000000001000000000000000001000000000000100000000000000000000,
    0b000000000000000000000000000100000000000000100000000000000001000000000000000000000,
    0b000000000000000000000000001000000000000001000000000000000010000000000000000000000,
    0b000000000000000000000000010100000000000010001000000000000101000000000000000000000,
    0b000000000000000000000000101000000000000100010000000000001010000000000000000000000,
    0b000000000000000000000001010000000000001000100000000000010100000000000000000000000,
    0b000000000000000000000010100000000000010001000000000000101000000000000000000000000,
    0b000000000000000000000101000000000000100010000000000001010000000000000000000000000,
    0b000000000000000000000010000000000000000100000000000000100000000000000000000000000,
    0b000000000000000000000100000000000000001000000000000001000000000000000000000000000,
    0b000000000000000000001000000000000100000000000000000100000000000000000000000000000,
    0b000000000000000000010000000000001000000000000000001010000000000000000000000000000,
    0b000000000000000000101000000000010001000000000000010100000000000000000000000000000,
    0b000000000000000001010000000000100010000000000000101000000000000000000000000000000,
    0b000000000000000010100000000001000100000000000001010000000000000000000000000000000,
    0b000000000000000101000000000010001000000000000010100000000000000000000000000000000,
    0b000000000000000010000000000000010000000000000101000000000000000000000000000000000,
    0b000000000000000100000000000000100000000000000010000000000000000000000000000000000,
    0b000000000000001000000000010000000000000000101000000000000000000000000000000000000,
    0b000000000000010000000000100000000000000001010000000000000000000000000000000000000,
    0b000000000000101000000001000100000000000010100000000000000000000000000000000000000,
    0b000000000001010000000010001000000000000101000000000000000000000000000000000000000,
    0b000000000010100000000100010000000000001010000000000000000000000000000000000000000,
    0b000000000001000000000000100000000000010100000000000000000000000000000000000000000,
    0b000000000010000000000001000000000000101000000000000000000000000000000000000000000,
    0b000000000100000000100000000000000101000000000000000000000000000000000000000000000,
    0b000000001000000001000000000000001010000000000000000000000000000000000000000000000,
    0b000000010100000010001000000000010100000000000000000000000000000000000000000000000,
    0b000000101000000100010000000000101000000000000000000000000000000000000000000000000,
    0b000000010000000000100000000001010000000000000000000000000000000000000000000000000,
    0b000000100000000001000000000010100000000000000000000000000000000000000000000000000,
    0b000001000000100000000000010100000000000000000000000000000000000000000000000000000,
    0b000010000001000000000000101000000000000000000000000000000000000000000000000000000,
    0b000101000010001000000001010000000000000000000000000000000000000000000000000000000,
    0b000010000000010000000010100000000000000000000000000000000000000000000000000000000,
    0b000100000000100000000101000000000000000000000000000000000000000000000000000000000,
    0b001000010000000000101000000000000000000000000000000000000000000000000000000000000,
    0b010000100000000001010000000000000000000000000000000000000000000000000000000000000,
    0b001000000100000010100000000000000000000000000000000000000000000000000000000000000,
    0b010000001000000101000000000000000000000000000000000000000000000000000000000000000,
    0b100100000000101000000000000000000000000000000000000000000000000000000000000000000,
    0b000000000001010000000000000000000000000000000000000000000000000000000000000000000,
    0b100001000010100000000000000000000000000000000000000000000000000000000000000000000,
    0b000000010100000000000000000000000000000000000000000000000000000000000000000000000,
    0b000000101000000000000000000000000000000000000000000000000000000000000000000000000,
    0b000101000000000000000000000000000000000000000000000000000000000000000000000000000
]

def generate_bitboard(hex_layers, player_layers):
    """
    Using the hexagonal grid to generate bitboard representations for Chinese checkers
    """
    G, node_positions, player1_nodes, player2_nodes = generate_two_player_chinese_checkers(hex_layers, player_layers)
    
    # Create bitboard mapping
    # 0b000000000000000000000000000000000000000000000000000000000000000000000000000000000
    bitboard_mapping = {index: 1 << index for index in node_positions.values()}
    
    # Initialize bitboards
    # Player one
    # 0b000000000000000000000000000000000000000000000000000000000000000000000001111111111
    bitboard_player1 = sum(bitboard_mapping[node] for node in player1_nodes)
    # 0b111111111100000000000000000000000000000000000000000000000000000000000000000000000
    bitboard_player2 = sum(bitboard_mapping[node] for node in player2_nodes)
    # Using logical or we can combine they two to get all the pieces
    # 0b111111111100000000000000000000000000000000000000000000000000000000000001111111111
    bitboard_occupied = bitboard_player1 | bitboard_player2
    
    # Precompute move masks
    neighbors_masks = {} # This stores the masks for the neightbors for each node
    jump_masks = {} # This stores the masks for the potential jumps for each node

    # Loop through the neighbor nodes of the current node
    for node in node_positions.values():
        neighbors_mask = 0
        jump_mask = 0
        for neighbor in G.neighbors(node):
            bit_pos = bitboard_mapping[neighbor]
            neighbors_mask |= bit_pos
            
            # Determine potential jump positions, meaning two steps in a straight line
            # Step 1 get coordinate of current node
            q1, r1 = [key for key, value in node_positions.items() if value == node][0]
            # Step 2 get coordinates of the neighbor that we want to jump over
            q2, r2 = [key for key, value in node_positions.items() if value == neighbor][0]
            # Calculate the coordinates of the node opposite the neighbor we jump
            q_jump, r_jump = 2 * q2 - q1, 2 * r2 - r1
            # Ccheck if the landing position exists on the board, if so add it to the mask
            if (q_jump, r_jump) in node_positions:
                jump_pos = bitboard_mapping[node_positions[(q_jump, r_jump)]]
                jump_mask |= jump_pos
        
        neighbors_masks[node] = neighbors_mask
        jump_masks[node] = jump_mask
    
    return bitboard_mapping, bitboard_player1, bitboard_player2, bitboard_occupied, neighbors_masks, jump_masks, node_positions

def print_bitboard_binary(bitboard):
    """
    Print the bitboard as a 0b binary string, padded to 81 bits.
    """
    print("0b" + bin(bitboard)[2:].zfill(81) + ",")

if __name__ == "__main__":
    hex_layers = 9
    player_layers = 4
    
    (bitboard_mapping, bitboard_player1, bitboard_player2, 
     bitboard_occupied, neighbors_masks, jump_masks, node_positions) = generate_bitboard(hex_layers, player_layers)
    
    # for i in range(81):
    #     test_pos = list(node_positions.values())[i]
    #     print_bitboard_binary(neighbors_masks[test_pos])

    # print()

    # for i in range(81):
    #     test_pos = list(node_positions.values())[i]
    #     print_bitboard_binary(jump_masks[test_pos])